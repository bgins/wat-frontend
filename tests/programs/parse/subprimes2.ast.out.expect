module
  import "env" "print"
    func $print
      typeuse
        param i32
  func $main
    typeuse
    local $0 i32
    local $1 i32
    local $2 i32
    local $3 i32
    local $4 i32
    local $5 i32
    block
      i32.const 100000
      local.set $0
      i32.const 0
      local.set $1
      i32.const 2
      local.set $2
      i32.const 0
      local.set $3
      i32.const 0
      local.set $4
      i32.const 0
      local.set $5
      block
        loop
          i32.const 1
          local.get $2
          local.get $0
          i32.le_s
          i32.sub
          br_if 1
          i32.const 1
          local.set $3
          i32.const 2
          local.set $4
          block
            loop
              i32.const 1
              local.get $4
              local.get $2
              i32.const 1
              i32.sub
              i32.le_s
              i32.sub
              br_if 1
              local.get $4
              local.get $2
              local.get $4
              i32.div_s
              i32.mul
              local.set $5
              local.get $2
              local.get $5
              i32.le_s
              if
                i32.const 0
                local.set $3
                else
                nop
              local.get $4
              i32.const 1
              i32.add
              local.set $4
              br 0
          local.get $3
          i32.const 0
          i32.ne
          if
            local.get $1
            local.get $2
            i32.add
            local.set $1
            else
            nop
          local.get $2
          i32.const 1
          i32.add
          local.set $2
          br 0
      local.get $1
      call $print
  export "main"
    func $main
